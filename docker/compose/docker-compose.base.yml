version: "3.8"

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d
      - ./docker/db/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - moneydiary-network

  api:
    build:
      context: .
      dockerfile: ${API_DOCKERFILE:-docker/backend/Dockerfile}
      args:
        - APP_VERSION=${APP_VERSION:-0.1.0}
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-false}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-moneydiary}
      - DB_USER=${POSTGRES_USER:-moneydiary}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-moneydiary_password}
      - SECRET_KEY=${SECRET_KEY:-default-insecure-key}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - moneydiary-network

  web:
    build:
      context: .
      dockerfile: ${WEB_DOCKERFILE:-docker/frontend/Dockerfile}
      args:
        - APP_VERSION=${APP_VERSION:-0.1.0}
        - API_URL=${API_URL:-http://localhost:8000}
    ports:
      - "${WEB_PORT:-3000}:80"
    depends_on:
      - api
    networks:
      - moneydiary-network

networks:
  moneydiary-network:
    name: ${NETWORK_NAME:-moneydiary-network}

volumes:
  postgres_data:
    name: ${POSTGRES_VOLUME:-moneydiary-postgres-data}
