version: '3.8'

services:
  # API Backend (Python)
  api:
    image: ghcr.io/juargo/moneydiary-api:latest
    container_name: moneydiary-api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - ENV=production
    volumes:
      - ./data:/app/data
    networks:
      - moneydiary-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      
  # Frontend
  frontend:
    image: ghcr.io/juargo/moneydiary-frontend:latest
    container_name: moneydiary-frontend
    restart: always
    ports:
      - "3000:80"
    environment:
      - BACKEND_URL=${BACKEND_URL:-http://api:8000}
    networks:
      - moneydiary-network
    depends_on:
      - api

  # Nginx para manejo de SSL y proxy inverso
  nginx:
    image: nginx:alpine
    container_name: moneydiary-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/www:/var/www/html
      - ./nginx/acme-challenge:/var/www/html/.well-known/acme-challenge
    depends_on:
      - api
      - frontend
    networks:
      - moneydiary-network
    # Comando para crear certificados SSL temporales al iniciar
    command: >
      sh -c "
        mkdir -p /etc/nginx/certs &&
        if [ ! -f /etc/nginx/certs/dummy.crt ]; then
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 
          -keyout /etc/nginx/certs/dummy.key 
          -out /etc/nginx/certs/dummy.crt 
          -subj '/CN=localhost';
        fi &&
        nginx -g 'daemon off;'
      "

  # Servicio Certbot para certificados SSL (solo se ejecuta bajo demanda)
  certbot:
    image: certbot/certbot
    container_name: moneydiary-certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/www:/var/www/html
      - ./nginx/acme-challenge:/var/www/html/.well-known/acme-challenge
    command: certonly --webroot --webroot-path=/var/www/html --email admin@jorgedev.cl --agree-tos --no-eff-email -d jorgedev.cl --force-renewal
    depends_on:
      - nginx

# Redes
networks:
  moneydiary-network:
    driver: bridge
