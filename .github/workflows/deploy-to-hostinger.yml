name: Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          # Eliminamos la opción de cache porque no tenemos archivo de lockfile
          
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Debug frontend directory
        run: |
          ls -la ./frontend
          cat ./frontend/package.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --no-strict

      - name: Build frontend
        working-directory: ./frontend
        run: pnpm build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          # Crear un entorno virtual para aislar las dependencias
          python3 -m venv venvents.txt
          source venv/bin/activatetes
          # Instalar con opción de ignorar incompatibilidades install -r requirements.txt --no-dependencies
          pip install --no-deps -r requirements.txtpecífica de pydantic
          pip install -r requirements.txt --use-pep517

      - name: Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.HOSTINGER_FTP_SERVER }}          
          dangerous-clean-slate: true
          server-dir: ${{ secrets.HOSTINGER_FTP_PATH }}/      
          local-dir: ./frontend/build/          
          username: ${{ secrets.HOSTINGER_FTP_USERNAME }}          
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
